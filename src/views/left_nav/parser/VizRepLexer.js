// Generated from java-escape by ANTLR 4.11.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,33,375,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
1,3,1,3,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,
1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,
1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,
13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,
1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,
18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,
1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,
22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,3,
22,225,8,22,1,23,1,23,1,23,1,23,1,23,1,23,3,23,233,8,23,1,24,1,24,1,24,1,
24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,3,24,246,8,24,1,25,1,25,1,25,1,25,
1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,3,25,264,8,25,
1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,
26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,3,26,
294,8,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,
1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,
28,1,28,1,28,1,28,3,28,327,8,28,1,29,1,29,4,29,331,8,29,11,29,12,29,332,
1,30,4,30,336,8,30,11,30,12,30,337,1,31,4,31,341,8,31,11,31,12,31,342,1,
31,1,31,1,32,3,32,348,8,32,1,32,1,32,4,32,352,8,32,11,32,12,32,353,1,33,
1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,3,33,365,8,33,1,34,1,34,1,34,1,34,
1,34,1,34,1,34,3,34,374,8,34,0,0,35,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,0,
43,0,45,21,47,22,49,23,51,24,53,25,55,26,57,27,59,28,61,29,63,30,65,31,67,
32,69,33,1,0,5,1,0,97,122,1,0,65,90,1,0,48,57,2,0,9,9,32,32,2,0,60,60,62,
62,395,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,
0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,
0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,
49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,
0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,1,71,
1,0,0,0,3,77,1,0,0,0,5,81,1,0,0,0,7,88,1,0,0,0,9,92,1,0,0,0,11,94,1,0,0,
0,13,99,1,0,0,0,15,104,1,0,0,0,17,111,1,0,0,0,19,117,1,0,0,0,21,119,1,0,
0,0,23,121,1,0,0,0,25,123,1,0,0,0,27,131,1,0,0,0,29,138,1,0,0,0,31,144,1,
0,0,0,33,150,1,0,0,0,35,161,1,0,0,0,37,166,1,0,0,0,39,179,1,0,0,0,41,189,
1,0,0,0,43,191,1,0,0,0,45,224,1,0,0,0,47,232,1,0,0,0,49,245,1,0,0,0,51,263,
1,0,0,0,53,293,1,0,0,0,55,295,1,0,0,0,57,326,1,0,0,0,59,330,1,0,0,0,61,335,
1,0,0,0,63,340,1,0,0,0,65,351,1,0,0,0,67,364,1,0,0,0,69,373,1,0,0,0,71,72,
5,83,0,0,72,73,5,84,0,0,73,74,5,65,0,0,74,75,5,82,0,0,75,76,5,84,0,0,76,
2,1,0,0,0,77,78,5,69,0,0,78,79,5,78,0,0,79,80,5,68,0,0,80,4,1,0,0,0,81,82,
5,77,0,0,82,83,5,73,0,0,83,84,5,68,0,0,84,85,5,68,0,0,85,86,5,76,0,0,86,
87,5,69,0,0,87,6,1,0,0,0,88,89,5,73,0,0,89,90,5,70,0,0,90,91,5,40,0,0,91,
8,1,0,0,0,92,93,5,41,0,0,93,10,1,0,0,0,94,95,5,84,0,0,95,96,5,72,0,0,96,
97,5,69,0,0,97,98,5,78,0,0,98,12,1,0,0,0,99,100,5,69,0,0,100,101,5,76,0,
0,101,102,5,83,0,0,102,103,5,69,0,0,103,14,1,0,0,0,104,105,5,69,0,0,105,
106,5,78,0,0,106,107,5,68,0,0,107,108,5,32,0,0,108,109,5,73,0,0,109,110,
5,70,0,0,110,16,1,0,0,0,111,112,5,67,0,0,112,113,5,85,0,0,113,114,5,66,0,
0,114,115,5,69,0,0,115,116,5,58,0,0,116,18,1,0,0,0,117,118,5,58,0,0,118,
20,1,0,0,0,119,120,5,44,0,0,120,22,1,0,0,0,121,122,5,59,0,0,122,24,1,0,0,
0,123,124,5,83,0,0,124,125,5,80,0,0,125,126,5,72,0,0,126,127,5,69,0,0,127,
128,5,82,0,0,128,129,5,69,0,0,129,130,5,58,0,0,130,26,1,0,0,0,131,132,5,
80,0,0,132,133,5,76,0,0,133,134,5,65,0,0,134,135,5,78,0,0,135,136,5,69,0,
0,136,137,5,58,0,0,137,28,1,0,0,0,138,139,5,84,0,0,139,140,5,69,0,0,140,
141,5,88,0,0,141,142,5,84,0,0,142,143,5,58,0,0,143,30,1,0,0,0,144,145,5,
76,0,0,145,146,5,73,0,0,146,147,5,78,0,0,147,148,5,69,0,0,148,149,5,58,0,
0,149,32,1,0,0,0,150,151,5,108,0,0,151,152,5,105,0,0,152,153,5,110,0,0,153,
154,5,101,0,0,154,155,5,119,0,0,155,156,5,105,0,0,156,157,5,100,0,0,157,
158,5,116,0,0,158,159,5,104,0,0,159,160,5,58,0,0,160,34,1,0,0,0,161,162,
5,80,0,0,162,163,5,69,0,0,163,164,5,78,0,0,164,165,5,58,0,0,165,36,1,0,0,
0,166,167,5,67,0,0,167,168,5,79,0,0,168,169,5,76,0,0,169,170,5,79,0,0,170,
171,5,82,0,0,171,172,5,58,0,0,172,173,5,32,0,0,173,174,5,102,0,0,174,175,
5,105,0,0,175,176,5,108,0,0,176,177,5,108,0,0,177,178,5,58,0,0,178,38,1,
0,0,0,179,180,5,77,0,0,180,181,5,65,0,0,181,182,5,80,0,0,182,183,5,58,0,
0,183,184,5,32,0,0,184,185,5,109,0,0,185,186,5,97,0,0,186,187,5,112,0,0,
187,188,5,58,0,0,188,40,1,0,0,0,189,190,7,0,0,0,190,42,1,0,0,0,191,192,7,
1,0,0,192,44,1,0,0,0,193,194,5,114,0,0,194,195,5,97,0,0,195,196,5,100,0,
0,196,197,5,105,0,0,197,198,5,117,0,0,198,225,5,115,0,0,199,200,5,119,0,
0,200,201,5,105,0,0,201,202,5,100,0,0,202,203,5,116,0,0,203,204,5,104,0,
0,204,205,5,83,0,0,205,206,5,101,0,0,206,207,5,103,0,0,207,208,5,109,0,0,
208,209,5,101,0,0,209,210,5,110,0,0,210,225,5,116,0,0,211,212,5,104,0,0,
212,213,5,101,0,0,213,214,5,105,0,0,214,215,5,103,0,0,215,216,5,104,0,0,
216,217,5,116,0,0,217,218,5,83,0,0,218,219,5,101,0,0,219,220,5,103,0,0,220,
221,5,109,0,0,221,222,5,101,0,0,222,223,5,110,0,0,223,225,5,116,0,0,224,
193,1,0,0,0,224,199,1,0,0,0,224,211,1,0,0,0,225,46,1,0,0,0,226,233,3,49,
24,0,227,228,5,100,0,0,228,229,5,101,0,0,229,230,5,112,0,0,230,231,5,116,
0,0,231,233,5,104,0,0,232,226,1,0,0,0,232,227,1,0,0,0,233,48,1,0,0,0,234,
235,5,104,0,0,235,236,5,101,0,0,236,237,5,105,0,0,237,238,5,103,0,0,238,
239,5,104,0,0,239,246,5,116,0,0,240,241,5,119,0,0,241,242,5,105,0,0,242,
243,5,100,0,0,243,244,5,116,0,0,244,246,5,104,0,0,245,234,1,0,0,0,245,240,
1,0,0,0,246,50,1,0,0,0,247,248,5,120,0,0,248,249,5,82,0,0,249,250,5,101,
0,0,250,264,5,108,0,0,251,252,5,121,0,0,252,253,5,82,0,0,253,254,5,101,0,
0,254,264,5,108,0,0,255,256,5,122,0,0,256,257,5,82,0,0,257,258,5,101,0,0,
258,264,5,108,0,0,259,260,5,115,0,0,260,261,5,105,0,0,261,262,5,122,0,0,
262,264,5,101,0,0,263,247,1,0,0,0,263,251,1,0,0,0,263,255,1,0,0,0,263,259,
1,0,0,0,264,52,1,0,0,0,265,266,5,116,0,0,266,267,5,101,0,0,267,268,5,120,
0,0,268,294,5,116,0,0,269,270,5,112,0,0,270,271,5,111,0,0,271,272,5,115,
0,0,272,273,5,78,0,0,273,274,5,97,0,0,274,275,5,109,0,0,275,276,5,101,0,
0,276,294,5,88,0,0,277,278,5,112,0,0,278,279,5,111,0,0,279,280,5,115,0,0,
280,281,5,78,0,0,281,282,5,97,0,0,282,283,5,109,0,0,283,284,5,101,0,0,284,
294,5,89,0,0,285,286,5,112,0,0,286,287,5,111,0,0,287,288,5,115,0,0,288,289,
5,78,0,0,289,290,5,97,0,0,290,291,5,109,0,0,291,292,5,101,0,0,292,294,5,
90,0,0,293,265,1,0,0,0,293,269,1,0,0,0,293,277,1,0,0,0,293,285,1,0,0,0,294,
54,1,0,0,0,295,296,5,100,0,0,296,297,5,97,0,0,297,298,5,115,0,0,298,299,
5,104,0,0,299,300,5,101,0,0,300,301,5,100,0,0,301,56,1,0,0,0,302,303,5,100,
0,0,303,304,5,97,0,0,304,305,5,115,0,0,305,306,5,104,0,0,306,307,5,83,0,
0,307,308,5,99,0,0,308,309,5,97,0,0,309,310,5,108,0,0,310,327,5,101,0,0,
311,312,5,103,0,0,312,313,5,97,0,0,313,314,5,112,0,0,314,315,5,83,0,0,315,
316,5,105,0,0,316,317,5,122,0,0,317,327,5,101,0,0,318,319,5,100,0,0,319,
320,5,97,0,0,320,321,5,115,0,0,321,322,5,104,0,0,322,323,5,83,0,0,323,324,
5,105,0,0,324,325,5,122,0,0,325,327,5,101,0,0,326,302,1,0,0,0,326,311,1,
0,0,0,326,318,1,0,0,0,327,58,1,0,0,0,328,331,3,41,20,0,329,331,3,43,21,0,
330,328,1,0,0,0,330,329,1,0,0,0,331,332,1,0,0,0,332,330,1,0,0,0,332,333,
1,0,0,0,333,60,1,0,0,0,334,336,7,2,0,0,335,334,1,0,0,0,336,337,1,0,0,0,337,
335,1,0,0,0,337,338,1,0,0,0,338,62,1,0,0,0,339,341,7,3,0,0,340,339,1,0,0,
0,341,342,1,0,0,0,342,340,1,0,0,0,342,343,1,0,0,0,343,344,1,0,0,0,344,345,
6,31,0,0,345,64,1,0,0,0,346,348,5,13,0,0,347,346,1,0,0,0,347,348,1,0,0,0,
348,349,1,0,0,0,349,352,5,10,0,0,350,352,5,13,0,0,351,347,1,0,0,0,351,350,
1,0,0,0,352,353,1,0,0,0,353,351,1,0,0,0,353,354,1,0,0,0,354,66,1,0,0,0,355,
356,5,116,0,0,356,357,5,114,0,0,357,358,5,117,0,0,358,365,5,101,0,0,359,
360,5,102,0,0,360,361,5,97,0,0,361,362,5,108,0,0,362,363,5,115,0,0,363,365,
5,101,0,0,364,355,1,0,0,0,364,359,1,0,0,0,365,68,1,0,0,0,366,367,5,60,0,
0,367,374,5,61,0,0,368,369,5,61,0,0,369,374,5,61,0,0,370,371,5,62,0,0,371,
374,5,61,0,0,372,374,7,4,0,0,373,366,1,0,0,0,373,368,1,0,0,0,373,370,1,0,
0,0,373,372,1,0,0,0,374,70,1,0,0,0,16,0,224,232,245,263,293,326,330,332,
337,342,347,351,353,364,373,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class VizRepLexer extends antlr4.Lexer {

    static grammarFileName = "VizRep.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'START'", "'END'", "'MIDDLE'", "'IF('", 
                         "')'", "'THEN'", "'ELSE'", "'END IF'", "'CUBE:'", 
                         "':'", "','", "';'", "'SPHERE:'", "'PLANE:'", "'TEXT:'", 
                         "'LINE:'", "'linewidth:'", "'PEN:'", "'COLOR: fill:'", 
                         "'MAP: map:'", null, null, null, null, null, "'dashed'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, "SPHEREDIMENSIONS", 
                          "DIMENSION3D", "DIMENSION2D", "TEXTDIMDIGITS", 
                          "TEXTDIMSTRING", "PENPARAMSBOOL", "PENPARAMS", 
                          "STRING", "DIGITS", "WHITESPACE", "NEWLINE", "BOOLEANSTR", 
                          "OPERATOR" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "LOWERCASE", "UPPERCASE", "SPHEREDIMENSIONS", 
                      "DIMENSION3D", "DIMENSION2D", "TEXTDIMDIGITS", "TEXTDIMSTRING", 
                      "PENPARAMSBOOL", "PENPARAMS", "STRING", "DIGITS", 
                      "WHITESPACE", "NEWLINE", "BOOLEANSTR", "OPERATOR" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

VizRepLexer.EOF = antlr4.Token.EOF;
VizRepLexer.T__0 = 1;
VizRepLexer.T__1 = 2;
VizRepLexer.T__2 = 3;
VizRepLexer.T__3 = 4;
VizRepLexer.T__4 = 5;
VizRepLexer.T__5 = 6;
VizRepLexer.T__6 = 7;
VizRepLexer.T__7 = 8;
VizRepLexer.T__8 = 9;
VizRepLexer.T__9 = 10;
VizRepLexer.T__10 = 11;
VizRepLexer.T__11 = 12;
VizRepLexer.T__12 = 13;
VizRepLexer.T__13 = 14;
VizRepLexer.T__14 = 15;
VizRepLexer.T__15 = 16;
VizRepLexer.T__16 = 17;
VizRepLexer.T__17 = 18;
VizRepLexer.T__18 = 19;
VizRepLexer.T__19 = 20;
VizRepLexer.SPHEREDIMENSIONS = 21;
VizRepLexer.DIMENSION3D = 22;
VizRepLexer.DIMENSION2D = 23;
VizRepLexer.TEXTDIMDIGITS = 24;
VizRepLexer.TEXTDIMSTRING = 25;
VizRepLexer.PENPARAMSBOOL = 26;
VizRepLexer.PENPARAMS = 27;
VizRepLexer.STRING = 28;
VizRepLexer.DIGITS = 29;
VizRepLexer.WHITESPACE = 30;
VizRepLexer.NEWLINE = 31;
VizRepLexer.BOOLEANSTR = 32;
VizRepLexer.OPERATOR = 33;



