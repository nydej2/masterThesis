// Generated from java-escape by ANTLR 4.11.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,39,465,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,1,0,1,0,
1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,
1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,
1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,
12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,
1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,
16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,
20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,
24,3,24,226,8,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,
25,1,25,1,25,1,25,1,25,1,25,3,25,259,8,25,1,26,1,26,1,26,1,26,1,26,1,26,
3,26,267,8,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,
1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,3,27,294,
8,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,3,28,307,8,28,
1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,
29,1,29,3,29,325,8,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,
1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,
30,1,30,1,30,1,30,3,30,355,8,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,
1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,
32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,3,32,388,8,32,1,33,1,33,1,33,
1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,
33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,3,33,415,8,33,1,34,4,34,418,8,34,11,
34,12,34,419,1,35,1,35,1,35,4,35,425,8,35,11,35,12,35,426,1,36,4,36,430,
8,36,11,36,12,36,431,1,37,4,37,435,8,37,11,37,12,37,436,1,37,1,37,1,38,3,
38,442,8,38,1,38,1,38,4,38,446,8,38,11,38,12,38,447,1,39,1,39,1,39,1,39,
1,39,1,39,1,39,3,39,457,8,39,1,40,1,40,1,40,4,40,462,8,40,11,40,12,40,463,
0,0,41,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,0,47,0,49,23,51,24,
53,25,55,26,57,27,59,28,61,29,63,30,65,31,67,32,69,33,71,34,73,35,75,36,
77,37,79,38,81,39,1,0,6,1,0,97,122,1,0,65,90,2,0,45,46,48,57,6,0,43,43,46,
57,61,61,65,90,95,95,97,122,2,0,9,9,32,32,2,0,60,60,62,62,493,0,1,1,0,0,
0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,
1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,
0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,49,1,0,0,0,0,51,1,
0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,
63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,
0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,1,83,1,0,0,0,3,89,
1,0,0,0,5,93,1,0,0,0,7,100,1,0,0,0,9,104,1,0,0,0,11,106,1,0,0,0,13,111,1,
0,0,0,15,116,1,0,0,0,17,123,1,0,0,0,19,129,1,0,0,0,21,131,1,0,0,0,23,133,
1,0,0,0,25,135,1,0,0,0,27,141,1,0,0,0,29,146,1,0,0,0,31,154,1,0,0,0,33,161,
1,0,0,0,35,167,1,0,0,0,37,173,1,0,0,0,39,184,1,0,0,0,41,189,1,0,0,0,43,202,
1,0,0,0,45,212,1,0,0,0,47,214,1,0,0,0,49,225,1,0,0,0,51,258,1,0,0,0,53,266,
1,0,0,0,55,293,1,0,0,0,57,306,1,0,0,0,59,324,1,0,0,0,61,354,1,0,0,0,63,356,
1,0,0,0,65,387,1,0,0,0,67,414,1,0,0,0,69,417,1,0,0,0,71,424,1,0,0,0,73,429,
1,0,0,0,75,434,1,0,0,0,77,445,1,0,0,0,79,456,1,0,0,0,81,461,1,0,0,0,83,84,
5,83,0,0,84,85,5,84,0,0,85,86,5,65,0,0,86,87,5,82,0,0,87,88,5,84,0,0,88,
2,1,0,0,0,89,90,5,69,0,0,90,91,5,78,0,0,91,92,5,68,0,0,92,4,1,0,0,0,93,94,
5,77,0,0,94,95,5,73,0,0,95,96,5,68,0,0,96,97,5,68,0,0,97,98,5,76,0,0,98,
99,5,69,0,0,99,6,1,0,0,0,100,101,5,73,0,0,101,102,5,70,0,0,102,103,5,40,
0,0,103,8,1,0,0,0,104,105,5,41,0,0,105,10,1,0,0,0,106,107,5,84,0,0,107,108,
5,72,0,0,108,109,5,69,0,0,109,110,5,78,0,0,110,12,1,0,0,0,111,112,5,69,0,
0,112,113,5,76,0,0,113,114,5,83,0,0,114,115,5,69,0,0,115,14,1,0,0,0,116,
117,5,69,0,0,117,118,5,78,0,0,118,119,5,68,0,0,119,120,5,32,0,0,120,121,
5,73,0,0,121,122,5,70,0,0,122,16,1,0,0,0,123,124,5,83,0,0,124,125,5,69,0,
0,125,126,5,84,0,0,126,127,5,58,0,0,127,128,5,32,0,0,128,18,1,0,0,0,129,
130,5,58,0,0,130,20,1,0,0,0,131,132,5,44,0,0,132,22,1,0,0,0,133,134,5,59,
0,0,134,24,1,0,0,0,135,136,5,67,0,0,136,137,5,85,0,0,137,138,5,66,0,0,138,
139,5,69,0,0,139,140,5,58,0,0,140,26,1,0,0,0,141,142,5,71,0,0,142,143,5,
69,0,0,143,144,5,84,0,0,144,145,5,58,0,0,145,28,1,0,0,0,146,147,5,83,0,0,
147,148,5,80,0,0,148,149,5,72,0,0,149,150,5,69,0,0,150,151,5,82,0,0,151,
152,5,69,0,0,152,153,5,58,0,0,153,30,1,0,0,0,154,155,5,80,0,0,155,156,5,
76,0,0,156,157,5,65,0,0,157,158,5,78,0,0,158,159,5,69,0,0,159,160,5,58,0,
0,160,32,1,0,0,0,161,162,5,84,0,0,162,163,5,69,0,0,163,164,5,88,0,0,164,
165,5,84,0,0,165,166,5,58,0,0,166,34,1,0,0,0,167,168,5,76,0,0,168,169,5,
73,0,0,169,170,5,78,0,0,170,171,5,69,0,0,171,172,5,58,0,0,172,36,1,0,0,0,
173,174,5,108,0,0,174,175,5,105,0,0,175,176,5,110,0,0,176,177,5,101,0,0,
177,178,5,87,0,0,178,179,5,105,0,0,179,180,5,100,0,0,180,181,5,116,0,0,181,
182,5,104,0,0,182,183,5,58,0,0,183,38,1,0,0,0,184,185,5,80,0,0,185,186,5,
69,0,0,186,187,5,78,0,0,187,188,5,58,0,0,188,40,1,0,0,0,189,190,5,67,0,0,
190,191,5,79,0,0,191,192,5,76,0,0,192,193,5,79,0,0,193,194,5,82,0,0,194,
195,5,58,0,0,195,196,5,32,0,0,196,197,5,102,0,0,197,198,5,105,0,0,198,199,
5,108,0,0,199,200,5,108,0,0,200,201,5,58,0,0,201,42,1,0,0,0,202,203,5,77,
0,0,203,204,5,65,0,0,204,205,5,80,0,0,205,206,5,58,0,0,206,207,5,32,0,0,
207,208,5,109,0,0,208,209,5,97,0,0,209,210,5,112,0,0,210,211,5,58,0,0,211,
44,1,0,0,0,212,213,7,0,0,0,213,46,1,0,0,0,214,215,7,1,0,0,215,48,1,0,0,0,
216,217,5,84,0,0,217,218,5,114,0,0,218,219,5,117,0,0,219,226,5,101,0,0,220,
221,5,70,0,0,221,222,5,97,0,0,222,223,5,108,0,0,223,224,5,115,0,0,224,226,
5,101,0,0,225,216,1,0,0,0,225,220,1,0,0,0,226,50,1,0,0,0,227,228,5,114,0,
0,228,229,5,97,0,0,229,230,5,100,0,0,230,231,5,105,0,0,231,232,5,117,0,0,
232,259,5,115,0,0,233,234,5,119,0,0,234,235,5,105,0,0,235,236,5,100,0,0,
236,237,5,116,0,0,237,238,5,104,0,0,238,239,5,83,0,0,239,240,5,101,0,0,240,
241,5,103,0,0,241,242,5,109,0,0,242,243,5,101,0,0,243,244,5,110,0,0,244,
259,5,116,0,0,245,246,5,104,0,0,246,247,5,101,0,0,247,248,5,105,0,0,248,
249,5,103,0,0,249,250,5,104,0,0,250,251,5,116,0,0,251,252,5,83,0,0,252,253,
5,101,0,0,253,254,5,103,0,0,254,255,5,109,0,0,255,256,5,101,0,0,256,257,
5,110,0,0,257,259,5,116,0,0,258,227,1,0,0,0,258,233,1,0,0,0,258,245,1,0,
0,0,259,52,1,0,0,0,260,267,3,57,28,0,261,262,5,100,0,0,262,263,5,101,0,0,
263,264,5,112,0,0,264,265,5,116,0,0,265,267,5,104,0,0,266,260,1,0,0,0,266,
261,1,0,0,0,267,54,1,0,0,0,268,269,5,104,0,0,269,270,5,101,0,0,270,271,5,
105,0,0,271,272,5,103,0,0,272,273,5,104,0,0,273,274,5,116,0,0,274,275,5,
68,0,0,275,276,5,121,0,0,276,294,5,110,0,0,277,278,5,100,0,0,278,279,5,101,
0,0,279,280,5,112,0,0,280,281,5,116,0,0,281,282,5,104,0,0,282,283,5,68,0,
0,283,284,5,121,0,0,284,294,5,110,0,0,285,286,5,119,0,0,286,287,5,105,0,
0,287,288,5,100,0,0,288,289,5,116,0,0,289,290,5,104,0,0,290,291,5,68,0,0,
291,292,5,121,0,0,292,294,5,110,0,0,293,268,1,0,0,0,293,277,1,0,0,0,293,
285,1,0,0,0,294,56,1,0,0,0,295,296,5,104,0,0,296,297,5,101,0,0,297,298,5,
105,0,0,298,299,5,103,0,0,299,300,5,104,0,0,300,307,5,116,0,0,301,302,5,
119,0,0,302,303,5,105,0,0,303,304,5,100,0,0,304,305,5,116,0,0,305,307,5,
104,0,0,306,295,1,0,0,0,306,301,1,0,0,0,307,58,1,0,0,0,308,309,5,120,0,0,
309,310,5,82,0,0,310,311,5,101,0,0,311,325,5,108,0,0,312,313,5,121,0,0,313,
314,5,82,0,0,314,315,5,101,0,0,315,325,5,108,0,0,316,317,5,122,0,0,317,318,
5,82,0,0,318,319,5,101,0,0,319,325,5,108,0,0,320,321,5,115,0,0,321,322,5,
105,0,0,322,323,5,122,0,0,323,325,5,101,0,0,324,308,1,0,0,0,324,312,1,0,
0,0,324,316,1,0,0,0,324,320,1,0,0,0,325,60,1,0,0,0,326,327,5,116,0,0,327,
328,5,101,0,0,328,329,5,120,0,0,329,355,5,116,0,0,330,331,5,112,0,0,331,
332,5,111,0,0,332,333,5,115,0,0,333,334,5,78,0,0,334,335,5,97,0,0,335,336,
5,109,0,0,336,337,5,101,0,0,337,355,5,88,0,0,338,339,5,112,0,0,339,340,5,
111,0,0,340,341,5,115,0,0,341,342,5,78,0,0,342,343,5,97,0,0,343,344,5,109,
0,0,344,345,5,101,0,0,345,355,5,89,0,0,346,347,5,112,0,0,347,348,5,111,0,
0,348,349,5,115,0,0,349,350,5,78,0,0,350,351,5,97,0,0,351,352,5,109,0,0,
352,353,5,101,0,0,353,355,5,90,0,0,354,326,1,0,0,0,354,330,1,0,0,0,354,338,
1,0,0,0,354,346,1,0,0,0,355,62,1,0,0,0,356,357,5,100,0,0,357,358,5,97,0,
0,358,359,5,115,0,0,359,360,5,104,0,0,360,361,5,101,0,0,361,362,5,100,0,
0,362,64,1,0,0,0,363,364,5,100,0,0,364,365,5,97,0,0,365,366,5,115,0,0,366,
367,5,104,0,0,367,368,5,83,0,0,368,369,5,99,0,0,369,370,5,97,0,0,370,371,
5,108,0,0,371,388,5,101,0,0,372,373,5,103,0,0,373,374,5,97,0,0,374,375,5,
112,0,0,375,376,5,83,0,0,376,377,5,105,0,0,377,378,5,122,0,0,378,388,5,101,
0,0,379,380,5,100,0,0,380,381,5,97,0,0,381,382,5,115,0,0,382,383,5,104,0,
0,383,384,5,83,0,0,384,385,5,105,0,0,385,386,5,122,0,0,386,388,5,101,0,0,
387,363,1,0,0,0,387,372,1,0,0,0,387,379,1,0,0,0,388,66,1,0,0,0,389,390,5,
105,0,0,390,391,5,110,0,0,391,392,5,115,0,0,392,393,5,116,0,0,393,394,5,
97,0,0,394,395,5,110,0,0,395,396,5,99,0,0,396,397,5,101,0,0,397,398,5,65,
0,0,398,399,5,100,0,0,399,400,5,97,0,0,400,401,5,112,0,0,401,402,5,116,0,
0,402,403,5,97,0,0,403,404,5,98,0,0,404,405,5,108,0,0,405,415,5,101,0,0,
406,407,5,105,0,0,407,408,5,115,0,0,408,409,5,68,0,0,409,410,5,121,0,0,410,
411,5,110,0,0,411,412,5,118,0,0,412,413,5,97,0,0,413,415,5,108,0,0,414,389,
1,0,0,0,414,406,1,0,0,0,415,68,1,0,0,0,416,418,7,2,0,0,417,416,1,0,0,0,418,
419,1,0,0,0,419,417,1,0,0,0,419,420,1,0,0,0,420,70,1,0,0,0,421,425,3,45,
22,0,422,425,3,47,23,0,423,425,5,95,0,0,424,421,1,0,0,0,424,422,1,0,0,0,
424,423,1,0,0,0,425,426,1,0,0,0,426,424,1,0,0,0,426,427,1,0,0,0,427,72,1,
0,0,0,428,430,7,3,0,0,429,428,1,0,0,0,430,431,1,0,0,0,431,429,1,0,0,0,431,
432,1,0,0,0,432,74,1,0,0,0,433,435,7,4,0,0,434,433,1,0,0,0,435,436,1,0,0,
0,436,434,1,0,0,0,436,437,1,0,0,0,437,438,1,0,0,0,438,439,6,37,0,0,439,76,
1,0,0,0,440,442,5,13,0,0,441,440,1,0,0,0,441,442,1,0,0,0,442,443,1,0,0,0,
443,446,5,10,0,0,444,446,5,13,0,0,445,441,1,0,0,0,445,444,1,0,0,0,446,447,
1,0,0,0,447,445,1,0,0,0,447,448,1,0,0,0,448,78,1,0,0,0,449,450,5,60,0,0,
450,457,5,61,0,0,451,452,5,61,0,0,452,457,5,61,0,0,453,454,5,62,0,0,454,
457,5,61,0,0,455,457,7,5,0,0,456,449,1,0,0,0,456,451,1,0,0,0,456,453,1,0,
0,0,456,455,1,0,0,0,457,80,1,0,0,0,458,462,3,71,35,0,459,462,3,69,34,0,460,
462,5,45,0,0,461,458,1,0,0,0,461,459,1,0,0,0,461,460,1,0,0,0,462,463,1,0,
0,0,463,461,1,0,0,0,463,464,1,0,0,0,464,82,1,0,0,0,21,0,225,258,266,293,
306,324,354,387,414,419,424,426,431,436,441,445,447,456,461,463,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class VizRepLexer extends antlr4.Lexer {

    static grammarFileName = "VizRep.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'START'", "'END'", "'MIDDLE'", "'IF('", 
                         "')'", "'THEN'", "'ELSE'", "'END IF'", "'SET: '", 
                         "':'", "','", "';'", "'CUBE:'", "'GET:'", "'SPHERE:'", 
                         "'PLANE:'", "'TEXT:'", "'LINE:'", "'lineWidth:'", 
                         "'PEN:'", "'COLOR: fill:'", "'MAP: map:'", null, 
                         null, null, null, null, null, null, "'dashed'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, "BOOLEANSTRING", 
                          "SPHEREDIMENSIONS", "DIMENSION3D", "DIMENSION3DDYN", 
                          "DIMENSION2D", "TEXTDIMDIGITS", "TEXTDIMSTRING", 
                          "PENPARAMSBOOL", "PENPARAMS", "VARASSVALUES", 
                          "DIGITS", "STRING", "MAP", "WHITESPACE", "NEWLINE", 
                          "OPERATOR", "SOMERULE" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "LOWERCASE", "UPPERCASE", 
                      "BOOLEANSTRING", "SPHEREDIMENSIONS", "DIMENSION3D", 
                      "DIMENSION3DDYN", "DIMENSION2D", "TEXTDIMDIGITS", 
                      "TEXTDIMSTRING", "PENPARAMSBOOL", "PENPARAMS", "VARASSVALUES", 
                      "DIGITS", "STRING", "MAP", "WHITESPACE", "NEWLINE", 
                      "OPERATOR", "SOMERULE" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

VizRepLexer.EOF = antlr4.Token.EOF;
VizRepLexer.T__0 = 1;
VizRepLexer.T__1 = 2;
VizRepLexer.T__2 = 3;
VizRepLexer.T__3 = 4;
VizRepLexer.T__4 = 5;
VizRepLexer.T__5 = 6;
VizRepLexer.T__6 = 7;
VizRepLexer.T__7 = 8;
VizRepLexer.T__8 = 9;
VizRepLexer.T__9 = 10;
VizRepLexer.T__10 = 11;
VizRepLexer.T__11 = 12;
VizRepLexer.T__12 = 13;
VizRepLexer.T__13 = 14;
VizRepLexer.T__14 = 15;
VizRepLexer.T__15 = 16;
VizRepLexer.T__16 = 17;
VizRepLexer.T__17 = 18;
VizRepLexer.T__18 = 19;
VizRepLexer.T__19 = 20;
VizRepLexer.T__20 = 21;
VizRepLexer.T__21 = 22;
VizRepLexer.BOOLEANSTRING = 23;
VizRepLexer.SPHEREDIMENSIONS = 24;
VizRepLexer.DIMENSION3D = 25;
VizRepLexer.DIMENSION3DDYN = 26;
VizRepLexer.DIMENSION2D = 27;
VizRepLexer.TEXTDIMDIGITS = 28;
VizRepLexer.TEXTDIMSTRING = 29;
VizRepLexer.PENPARAMSBOOL = 30;
VizRepLexer.PENPARAMS = 31;
VizRepLexer.VARASSVALUES = 32;
VizRepLexer.DIGITS = 33;
VizRepLexer.STRING = 34;
VizRepLexer.MAP = 35;
VizRepLexer.WHITESPACE = 36;
VizRepLexer.NEWLINE = 37;
VizRepLexer.OPERATOR = 38;
VizRepLexer.SOMERULE = 39;



