// Generated from java-escape by ANTLR 4.11.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,37,426,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,1,0,1,0,1,0,1,0,1,0,1,0,1,1,
1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,
1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,9,1,9,
1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,
12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,
1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,
16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,
1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,
19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
3,22,210,8,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,
23,1,23,1,23,1,23,1,23,3,23,243,8,23,1,24,1,24,1,24,1,24,1,24,1,24,3,24,
251,8,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,3,25,264,
8,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,
26,1,26,1,26,3,26,282,8,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,
1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,
27,1,27,1,27,1,27,1,27,3,27,312,8,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,
29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,3,29,345,8,29,1,30,1,30,
1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,
30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,3,30,372,8,30,1,31,4,31,375,8,
31,11,31,12,31,376,1,32,1,32,1,32,4,32,382,8,32,11,32,12,32,383,1,33,4,33,
387,8,33,11,33,12,33,388,1,34,4,34,392,8,34,11,34,12,34,393,1,34,1,34,1,
35,3,35,399,8,35,1,35,1,35,4,35,403,8,35,11,35,12,35,404,1,36,1,36,1,36,
1,36,1,36,1,36,1,36,3,36,414,8,36,1,37,1,37,1,37,4,37,419,8,37,11,37,12,
37,420,1,38,1,38,1,38,1,38,0,0,39,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,0,
43,0,45,21,47,22,49,23,51,24,53,25,55,26,57,27,59,28,61,29,63,30,65,31,67,
32,69,33,71,34,73,35,75,36,77,37,1,0,6,1,0,97,122,1,0,65,90,2,0,45,46,48,
57,6,0,43,43,46,57,61,61,65,90,95,95,97,122,2,0,9,9,32,32,2,0,60,60,62,62,
452,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,
0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,
61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,
0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,1,79,1,0,0,0,3,85,1,0,0,0,5,89,
1,0,0,0,7,93,1,0,0,0,9,95,1,0,0,0,11,100,1,0,0,0,13,105,1,0,0,0,15,112,1,
0,0,0,17,118,1,0,0,0,19,120,1,0,0,0,21,122,1,0,0,0,23,124,1,0,0,0,25,130,
1,0,0,0,27,138,1,0,0,0,29,145,1,0,0,0,31,151,1,0,0,0,33,157,1,0,0,0,35,168,
1,0,0,0,37,181,1,0,0,0,39,186,1,0,0,0,41,196,1,0,0,0,43,198,1,0,0,0,45,209,
1,0,0,0,47,242,1,0,0,0,49,250,1,0,0,0,51,263,1,0,0,0,53,281,1,0,0,0,55,311,
1,0,0,0,57,313,1,0,0,0,59,344,1,0,0,0,61,371,1,0,0,0,63,374,1,0,0,0,65,381,
1,0,0,0,67,386,1,0,0,0,69,391,1,0,0,0,71,402,1,0,0,0,73,413,1,0,0,0,75,418,
1,0,0,0,77,422,1,0,0,0,79,80,5,83,0,0,80,81,5,84,0,0,81,82,5,65,0,0,82,83,
5,82,0,0,83,84,5,84,0,0,84,2,1,0,0,0,85,86,5,69,0,0,86,87,5,78,0,0,87,88,
5,68,0,0,88,4,1,0,0,0,89,90,5,73,0,0,90,91,5,70,0,0,91,92,5,40,0,0,92,6,
1,0,0,0,93,94,5,41,0,0,94,8,1,0,0,0,95,96,5,84,0,0,96,97,5,72,0,0,97,98,
5,69,0,0,98,99,5,78,0,0,99,10,1,0,0,0,100,101,5,69,0,0,101,102,5,76,0,0,
102,103,5,83,0,0,103,104,5,69,0,0,104,12,1,0,0,0,105,106,5,69,0,0,106,107,
5,78,0,0,107,108,5,68,0,0,108,109,5,32,0,0,109,110,5,73,0,0,110,111,5,70,
0,0,111,14,1,0,0,0,112,113,5,83,0,0,113,114,5,69,0,0,114,115,5,84,0,0,115,
116,5,58,0,0,116,117,5,32,0,0,117,16,1,0,0,0,118,119,5,58,0,0,119,18,1,0,
0,0,120,121,5,44,0,0,121,20,1,0,0,0,122,123,5,59,0,0,123,22,1,0,0,0,124,
125,5,67,0,0,125,126,5,85,0,0,126,127,5,66,0,0,127,128,5,69,0,0,128,129,
5,58,0,0,129,24,1,0,0,0,130,131,5,83,0,0,131,132,5,80,0,0,132,133,5,72,0,
0,133,134,5,69,0,0,134,135,5,82,0,0,135,136,5,69,0,0,136,137,5,58,0,0,137,
26,1,0,0,0,138,139,5,80,0,0,139,140,5,76,0,0,140,141,5,65,0,0,141,142,5,
78,0,0,142,143,5,69,0,0,143,144,5,58,0,0,144,28,1,0,0,0,145,146,5,84,0,0,
146,147,5,69,0,0,147,148,5,88,0,0,148,149,5,84,0,0,149,150,5,58,0,0,150,
30,1,0,0,0,151,152,5,76,0,0,152,153,5,73,0,0,153,154,5,78,0,0,154,155,5,
69,0,0,155,156,5,58,0,0,156,32,1,0,0,0,157,158,5,108,0,0,158,159,5,105,0,
0,159,160,5,110,0,0,160,161,5,101,0,0,161,162,5,87,0,0,162,163,5,105,0,0,
163,164,5,100,0,0,164,165,5,116,0,0,165,166,5,104,0,0,166,167,5,58,0,0,167,
34,1,0,0,0,168,169,5,67,0,0,169,170,5,79,0,0,170,171,5,76,0,0,171,172,5,
79,0,0,172,173,5,82,0,0,173,174,5,58,0,0,174,175,5,32,0,0,175,176,5,102,
0,0,176,177,5,105,0,0,177,178,5,108,0,0,178,179,5,108,0,0,179,180,5,58,0,
0,180,36,1,0,0,0,181,182,5,80,0,0,182,183,5,69,0,0,183,184,5,78,0,0,184,
185,5,58,0,0,185,38,1,0,0,0,186,187,5,77,0,0,187,188,5,65,0,0,188,189,5,
80,0,0,189,190,5,58,0,0,190,191,5,32,0,0,191,192,5,109,0,0,192,193,5,97,
0,0,193,194,5,112,0,0,194,195,5,58,0,0,195,40,1,0,0,0,196,197,7,0,0,0,197,
42,1,0,0,0,198,199,7,1,0,0,199,44,1,0,0,0,200,201,5,84,0,0,201,202,5,114,
0,0,202,203,5,117,0,0,203,210,5,101,0,0,204,205,5,70,0,0,205,206,5,97,0,
0,206,207,5,108,0,0,207,208,5,115,0,0,208,210,5,101,0,0,209,200,1,0,0,0,
209,204,1,0,0,0,210,46,1,0,0,0,211,212,5,114,0,0,212,213,5,97,0,0,213,214,
5,100,0,0,214,215,5,105,0,0,215,216,5,117,0,0,216,243,5,115,0,0,217,218,
5,119,0,0,218,219,5,105,0,0,219,220,5,100,0,0,220,221,5,116,0,0,221,222,
5,104,0,0,222,223,5,83,0,0,223,224,5,101,0,0,224,225,5,103,0,0,225,226,5,
109,0,0,226,227,5,101,0,0,227,228,5,110,0,0,228,243,5,116,0,0,229,230,5,
104,0,0,230,231,5,101,0,0,231,232,5,105,0,0,232,233,5,103,0,0,233,234,5,
104,0,0,234,235,5,116,0,0,235,236,5,83,0,0,236,237,5,101,0,0,237,238,5,103,
0,0,238,239,5,109,0,0,239,240,5,101,0,0,240,241,5,110,0,0,241,243,5,116,
0,0,242,211,1,0,0,0,242,217,1,0,0,0,242,229,1,0,0,0,243,48,1,0,0,0,244,251,
3,51,25,0,245,246,5,100,0,0,246,247,5,101,0,0,247,248,5,112,0,0,248,249,
5,116,0,0,249,251,5,104,0,0,250,244,1,0,0,0,250,245,1,0,0,0,251,50,1,0,0,
0,252,253,5,104,0,0,253,254,5,101,0,0,254,255,5,105,0,0,255,256,5,103,0,
0,256,257,5,104,0,0,257,264,5,116,0,0,258,259,5,119,0,0,259,260,5,105,0,
0,260,261,5,100,0,0,261,262,5,116,0,0,262,264,5,104,0,0,263,252,1,0,0,0,
263,258,1,0,0,0,264,52,1,0,0,0,265,266,5,120,0,0,266,267,5,82,0,0,267,268,
5,101,0,0,268,282,5,108,0,0,269,270,5,121,0,0,270,271,5,82,0,0,271,272,5,
101,0,0,272,282,5,108,0,0,273,274,5,122,0,0,274,275,5,82,0,0,275,276,5,101,
0,0,276,282,5,108,0,0,277,278,5,115,0,0,278,279,5,105,0,0,279,280,5,122,
0,0,280,282,5,101,0,0,281,265,1,0,0,0,281,269,1,0,0,0,281,273,1,0,0,0,281,
277,1,0,0,0,282,54,1,0,0,0,283,284,5,116,0,0,284,285,5,101,0,0,285,286,5,
120,0,0,286,312,5,116,0,0,287,288,5,112,0,0,288,289,5,111,0,0,289,290,5,
115,0,0,290,291,5,78,0,0,291,292,5,97,0,0,292,293,5,109,0,0,293,294,5,101,
0,0,294,312,5,88,0,0,295,296,5,112,0,0,296,297,5,111,0,0,297,298,5,115,0,
0,298,299,5,78,0,0,299,300,5,97,0,0,300,301,5,109,0,0,301,302,5,101,0,0,
302,312,5,89,0,0,303,304,5,112,0,0,304,305,5,111,0,0,305,306,5,115,0,0,306,
307,5,78,0,0,307,308,5,97,0,0,308,309,5,109,0,0,309,310,5,101,0,0,310,312,
5,90,0,0,311,283,1,0,0,0,311,287,1,0,0,0,311,295,1,0,0,0,311,303,1,0,0,0,
312,56,1,0,0,0,313,314,5,100,0,0,314,315,5,97,0,0,315,316,5,115,0,0,316,
317,5,104,0,0,317,318,5,101,0,0,318,319,5,100,0,0,319,58,1,0,0,0,320,321,
5,100,0,0,321,322,5,97,0,0,322,323,5,115,0,0,323,324,5,104,0,0,324,325,5,
83,0,0,325,326,5,99,0,0,326,327,5,97,0,0,327,328,5,108,0,0,328,345,5,101,
0,0,329,330,5,103,0,0,330,331,5,97,0,0,331,332,5,112,0,0,332,333,5,83,0,
0,333,334,5,105,0,0,334,335,5,122,0,0,335,345,5,101,0,0,336,337,5,100,0,
0,337,338,5,97,0,0,338,339,5,115,0,0,339,340,5,104,0,0,340,341,5,83,0,0,
341,342,5,105,0,0,342,343,5,122,0,0,343,345,5,101,0,0,344,320,1,0,0,0,344,
329,1,0,0,0,344,336,1,0,0,0,345,60,1,0,0,0,346,347,5,105,0,0,347,348,5,110,
0,0,348,349,5,115,0,0,349,350,5,116,0,0,350,351,5,97,0,0,351,352,5,110,0,
0,352,353,5,99,0,0,353,354,5,101,0,0,354,355,5,65,0,0,355,356,5,100,0,0,
356,357,5,97,0,0,357,358,5,112,0,0,358,359,5,116,0,0,359,360,5,97,0,0,360,
361,5,98,0,0,361,362,5,108,0,0,362,372,5,101,0,0,363,364,5,105,0,0,364,365,
5,115,0,0,365,366,5,68,0,0,366,367,5,121,0,0,367,368,5,110,0,0,368,369,5,
118,0,0,369,370,5,97,0,0,370,372,5,108,0,0,371,346,1,0,0,0,371,363,1,0,0,
0,372,62,1,0,0,0,373,375,7,2,0,0,374,373,1,0,0,0,375,376,1,0,0,0,376,374,
1,0,0,0,376,377,1,0,0,0,377,64,1,0,0,0,378,382,3,41,20,0,379,382,3,43,21,
0,380,382,5,95,0,0,381,378,1,0,0,0,381,379,1,0,0,0,381,380,1,0,0,0,382,383,
1,0,0,0,383,381,1,0,0,0,383,384,1,0,0,0,384,66,1,0,0,0,385,387,7,3,0,0,386,
385,1,0,0,0,387,388,1,0,0,0,388,386,1,0,0,0,388,389,1,0,0,0,389,68,1,0,0,
0,390,392,7,4,0,0,391,390,1,0,0,0,392,393,1,0,0,0,393,391,1,0,0,0,393,394,
1,0,0,0,394,395,1,0,0,0,395,396,6,34,0,0,396,70,1,0,0,0,397,399,5,13,0,0,
398,397,1,0,0,0,398,399,1,0,0,0,399,400,1,0,0,0,400,403,5,10,0,0,401,403,
5,13,0,0,402,398,1,0,0,0,402,401,1,0,0,0,403,404,1,0,0,0,404,402,1,0,0,0,
404,405,1,0,0,0,405,72,1,0,0,0,406,407,5,60,0,0,407,414,5,61,0,0,408,409,
5,61,0,0,409,414,5,61,0,0,410,411,5,62,0,0,411,414,5,61,0,0,412,414,7,5,
0,0,413,406,1,0,0,0,413,408,1,0,0,0,413,410,1,0,0,0,413,412,1,0,0,0,414,
74,1,0,0,0,415,419,3,65,32,0,416,419,3,63,31,0,417,419,5,45,0,0,418,415,
1,0,0,0,418,416,1,0,0,0,418,417,1,0,0,0,419,420,1,0,0,0,420,418,1,0,0,0,
420,421,1,0,0,0,421,76,1,0,0,0,422,423,5,40,0,0,423,424,3,65,32,0,424,425,
5,41,0,0,425,78,1,0,0,0,20,0,209,242,250,263,281,311,344,371,376,381,383,
388,393,398,402,404,413,418,420,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class VizRepLexer extends antlr4.Lexer {

    static grammarFileName = "VizRep.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'START'", "'END'", "'IF('", "')'", "'THEN'", 
                         "'ELSE'", "'END IF'", "'SET: '", "':'", "','", 
                         "';'", "'CUBE:'", "'SPHERE:'", "'PLANE:'", "'TEXT:'", 
                         "'LINE:'", "'lineWidth:'", "'COLOR: fill:'", "'PEN:'", 
                         "'MAP: map:'", null, null, null, null, null, null, 
                         "'dashed'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, "BOOLEANSTRING", 
                          "SPHEREPARAMS", "DIMENSION3D", "DIMENSION2D", 
                          "TEXTPARAMDIGITS", "TEXTPARAMSTRING", "PENPARAMSBOOL", 
                          "PENPARAMS", "VARASSPARAMS", "DIGITS", "STRING", 
                          "MAPLEXER", "WHITESPACE", "NEWLINE", "OPERATOR", 
                          "DYNVALSTRING", "DYNINPUT" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "LOWERCASE", "UPPERCASE", "BOOLEANSTRING", 
                      "SPHEREPARAMS", "DIMENSION3D", "DIMENSION2D", "TEXTPARAMDIGITS", 
                      "TEXTPARAMSTRING", "PENPARAMSBOOL", "PENPARAMS", "VARASSPARAMS", 
                      "DIGITS", "STRING", "MAPLEXER", "WHITESPACE", "NEWLINE", 
                      "OPERATOR", "DYNVALSTRING", "DYNINPUT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

VizRepLexer.EOF = antlr4.Token.EOF;
VizRepLexer.T__0 = 1;
VizRepLexer.T__1 = 2;
VizRepLexer.T__2 = 3;
VizRepLexer.T__3 = 4;
VizRepLexer.T__4 = 5;
VizRepLexer.T__5 = 6;
VizRepLexer.T__6 = 7;
VizRepLexer.T__7 = 8;
VizRepLexer.T__8 = 9;
VizRepLexer.T__9 = 10;
VizRepLexer.T__10 = 11;
VizRepLexer.T__11 = 12;
VizRepLexer.T__12 = 13;
VizRepLexer.T__13 = 14;
VizRepLexer.T__14 = 15;
VizRepLexer.T__15 = 16;
VizRepLexer.T__16 = 17;
VizRepLexer.T__17 = 18;
VizRepLexer.T__18 = 19;
VizRepLexer.T__19 = 20;
VizRepLexer.BOOLEANSTRING = 21;
VizRepLexer.SPHEREPARAMS = 22;
VizRepLexer.DIMENSION3D = 23;
VizRepLexer.DIMENSION2D = 24;
VizRepLexer.TEXTPARAMDIGITS = 25;
VizRepLexer.TEXTPARAMSTRING = 26;
VizRepLexer.PENPARAMSBOOL = 27;
VizRepLexer.PENPARAMS = 28;
VizRepLexer.VARASSPARAMS = 29;
VizRepLexer.DIGITS = 30;
VizRepLexer.STRING = 31;
VizRepLexer.MAPLEXER = 32;
VizRepLexer.WHITESPACE = 33;
VizRepLexer.NEWLINE = 34;
VizRepLexer.OPERATOR = 35;
VizRepLexer.DYNVALSTRING = 36;
VizRepLexer.DYNINPUT = 37;



